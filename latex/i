113292475659649136992	1450753221310	Initialise UMI	The obvious aim of OpenMaths is to provide a way of {\\bf writing down all of mathematics in exactly the language of mathematics as written by mathematicians}, \nexcept with the full automated checking and assistance provided by software for writing programs.  \nThe meta-mathematical language will only differ from programming languages in that the design will be {\\bf free of computational compromises, so extremely easy to learn} and limitless. \nThis design is possible since \n\n\\begin{enumerate}\n\\item The compiler exists on the Cloud, which is an efficient way of having high computational power without buying many powerful computers, nor spending a lot of money.\n\\item It's primary use case will be that of proof checking and proof writing, rather than the execution of programs, though that will come later.  I.e. expressibility before applicability.\n\\item The development environment is being developed with the compiler, which means many assumptions necessarily placed on other languages are not necessary here. Obvious benefit include the ability to have LaTeX and images, and effortless reuse across projects due to a single epic \"Monorepo\".\n\\end{enumerate} \n\nThis is the exact foundation required for a great many more things not possible with programming languages or current mathematics.  \nFor example if tied to Neural Net based image recognition software it could allow for us to write mathematics by hand and have it automatically converted to semantically and syntactically perfect LaTeX.  \nNow LaTeX is extremely powerful, in fact it supports imagery. This means lines, circles and other shapes drawn by hand could some day have precise meaning as syntax in a language.\n\nOf course this may not be the most immediate direction to go in. {\\bf Automatic proof generation and assistance could mean finally solving very hard maths problems in comprehensible amounts of time}. \nNormally hard maths problems take decades or even generations to solve - six maths problems have 1 million pound bounties.  \nThese six are really just six in hundreds or even thousands of profound unsolved maths problems that could have profound implications for technology.\n\nNow proof generation and assistance can be applied to programs too giving a limitless \"dependent type-system\" and \"provably correct programs\". \nTake this further and you could have program generation.  Further still and we have {\\bf provably correct program generation}.
113292475659649136992	1451252755542	Initialise UMI	@@ -14,1 +14,1 @@\n-Now LaTeX is extremely powerful, in fact it supports imagery. This means lines, circles and other shapes drawn by hand could some day have precise meaning as syntax in a language.\n+Now LaTeX is extremely powerful, in fact it supports imagery. This means lines, circles and other shapes drawn by hand could some day have precise meaning as syntax in a language. \\par\n@@ -18,1 +18,1 @@\n-These six are really just six in hundreds or even thousands of profound unsolved maths problems that could have profound implications for technology.\n+These six are really just six in hundreds or even thousands of profound unsolved maths problems that could have profound implications for technology. \\par
113292475659649136992	1451252797480	Initialise UMI	@@ -4,1 +4,1 @@\n-This design is possible since \n+This design is possible since \\par
